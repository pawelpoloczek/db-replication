version: '3.7'

services:

    mysql-master:
        image: mysql:8.0.17
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - ./database/master.cnf:/etc//mysql/conf.d/master.cnf
            - ./database/dump/:/db-dump
        ports:
            - 3306:3306
        restart: 'no'
        environment:
            MYSQL_ROOT_PASSWORD: pass123
            MYSQL_DATABASE: app
            MYSQL_USER: app
            MYSQL_PASSWORD: pass123

    mysql-slave:
        image: mysql:8.0.17
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - ./database/slave.cnf:/etc//mysql/conf.d/slave.cnf
            - ./database/dump/:/db-dump
        ports:
            - 3307:3307
        restart: 'no'
        environment:
            MYSQL_ROOT_PASSWORD: pass123
            MYSQL_DATABASE: app
            MYSQL_USER: app
            MYSQL_PASSWORD: pass123

    app1:
        image: nginx:1.17.3-alpine
        volumes:
            - ./app/:/var/www/app/
            - ./vhosts/app1.conf:/etc/nginx/conf.d/app1.conf
        working_dir: /var/www/app/
        depends_on:
            - app-php1
        restart: 'no'

    app2:
        image: nginx:1.17.3-alpine
        volumes:
            - ./app/:/var/www/app/
            - ./vhosts/app2.conf:/etc/nginx/conf.d/app2.conf
        working_dir: /var/www/app/
        depends_on:
            - app-php2
        restart: 'no'

    app-php1:
        build: ./php
        working_dir: /var/www/app/
        volumes:
            - ./app/:/var/www/app/
        depends_on:
            - mysql-master
        restart: 'no'

    app-php2:
        build: ./php
        working_dir: /var/www/app/
        volumes:
            - ./app/:/var/www/app/
        depends_on:
            - mysql-master
        restart: 'no'

    haproxy:
        image: dockercloud/haproxy:1.6.7
        ports:
          - 80:80
          - 443:443
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
          - app1
          - app2
        environment:
            - ADDITIONAL_SERVICES=db-replication:app1,db-replication:app2
